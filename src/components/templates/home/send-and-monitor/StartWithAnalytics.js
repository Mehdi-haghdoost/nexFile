import React from 'react';

// Icons as separate components for reusability
const SuggestedItemIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none">
    <path d="M35.6349 10.6175V9.61494C35.6337 8.73529 35.2982 7.89214 34.7021 7.2708C34.1061 6.64946 33.2982 6.30077 32.4562 6.30137H15.8751C15.5568 5.8911 15.1541 5.56106 14.6968 5.33578C14.2396 5.11049 13.7397 4.99577 13.2341 5.00012H5.98502C5.06128 5.00198 4.17589 5.38615 3.52271 6.0685C2.86953 6.75085 2.50178 7.67579 2.5 8.64078V31.3593C2.50178 32.3243 2.86953 33.2493 3.52271 33.9316C4.17589 34.614 5.06128 34.9981 5.98502 35H8.98677C9.16512 34.9966 9.33505 34.9201 9.46001 34.7871C9.58498 34.6542 9.65498 34.4753 9.65498 34.2889C9.65497 34.1026 9.58496 33.9237 9.45999 33.7907C9.33502 33.6577 9.16508 33.5813 8.98673 33.5779H5.98502C5.42201 33.5771 4.88226 33.3431 4.48414 32.9272C4.08603 32.5114 3.86206 31.9475 3.86134 31.3593V8.64078C3.86206 8.05262 4.08603 7.48877 4.48414 7.07287C4.88226 6.65698 5.42201 6.423 5.98502 6.42225H13.2341C13.7732 6.41785 14.2929 6.63195 14.684 7.01955L17.3998 10.5109C17.7261 10.8644 18.1174 11.1454 18.5501 11.3373C18.9829 11.5291 19.4482 11.6277 19.9183 11.6273H34.0149C34.5777 11.6287 35.1171 11.8629 35.5151 12.2786C35.913 12.6944 36.1372 13.2578 36.1386 13.8458V31.3593C36.1379 31.9475 35.9139 32.5114 35.5158 32.9272C35.1177 33.3431 34.5779 33.5771 34.0149 33.5779H31.0132C30.8345 33.5808 30.664 33.657 30.5387 33.79C30.4133 33.923 30.343 34.1023 30.343 34.289C30.343 34.4757 30.4133 34.6549 30.5387 34.7879C30.6641 34.9209 30.8345 34.9971 31.0132 35H34.015C34.9387 34.9981 35.8241 34.614 36.4773 33.9316C37.1305 33.2493 37.4982 32.3243 37.5 31.3593V13.8458C37.501 13.1811 37.3277 12.5288 36.9989 11.9597C36.6701 11.3905 36.1984 10.9264 35.6349 10.6175ZM34.2736 10.2193C34.1879 10.2073 34.1014 10.2026 34.015 10.2051H19.9183C19.3644 10.2072 18.8317 9.98259 18.4344 9.57939L16.9846 7.72346H32.4562C32.9372 7.72296 33.3987 7.92184 33.7394 8.27646C34.0801 8.63108 34.2723 9.11245 34.2736 9.6149V10.2193Z" fill="white" stroke="white" strokeWidth="0.3" />
    <path d="M29.1094 27.1455C29.4835 25.731 29.4875 24.2529 29.1212 22.8366L29.2764 22.7532C29.6085 22.572 29.8507 22.2754 29.9502 21.928C30.0498 21.5806 29.9987 21.2104 29.8081 20.8981L28.7002 19.1029C28.5926 18.9377 28.4497 18.795 28.2804 18.6838C28.1112 18.5725 27.9193 18.4951 27.7166 18.4564C27.514 18.4177 27.305 18.4185 27.1027 18.4588C26.9004 18.499 26.7092 18.5779 26.5409 18.6904C25.4201 17.6782 24.0535 16.9354 22.5584 16.5257V16.3581C22.5579 15.998 22.4048 15.6529 22.1327 15.3983C21.8606 15.1437 21.4917 15.0005 21.1068 15H18.8898C18.6825 15.0033 18.4783 15.047 18.29 15.1282C18.1018 15.2094 17.9337 15.3263 17.7963 15.4716C17.659 15.6169 17.5555 15.7873 17.4924 15.972C17.4294 16.1568 17.408 16.3518 17.4299 16.5446C15.9318 16.9462 14.5604 17.6821 13.4334 18.6891L13.281 18.6061C12.9471 18.4274 12.5512 18.3793 12.1795 18.4723C11.8079 18.5653 11.4905 18.7918 11.2964 19.1025L10.1893 20.8971C10.0893 21.0669 10.028 21.2542 10.0092 21.4473C9.99045 21.6403 10.0146 21.8349 10.0802 22.0188C10.1458 22.2027 10.2513 22.3719 10.3902 22.5157C10.5291 22.6595 10.6984 22.7749 10.8873 22.8545C10.5131 24.269 10.5091 25.7471 10.8754 27.1634C10.6879 27.2417 10.5199 27.3558 10.3821 27.4983C10.2443 27.6408 10.1397 27.8085 10.0751 27.9909C10.0105 28.1733 9.98716 28.3663 10.0067 28.5576C10.0262 28.7489 10.0882 28.9343 10.1886 29.1019L11.2964 30.8971C11.404 31.0623 11.5469 31.2051 11.7161 31.3163C11.8854 31.4275 12.0773 31.5049 12.28 31.5437C12.4826 31.5824 12.6916 31.5816 12.8939 31.5413C13.0962 31.501 13.2875 31.4221 13.4557 31.3096C14.5766 32.3218 15.9431 33.0646 17.4382 33.4743C17.4165 33.6655 17.4377 33.8589 17.5006 34.042C17.5634 34.2252 17.6665 34.394 17.8032 34.5376C17.9399 34.6813 18.1071 34.7966 18.2943 34.8763C18.4814 34.9559 18.6842 34.998 18.8898 35H21.1068C21.3141 34.9967 21.5183 34.953 21.7066 34.8718C21.8948 34.7906 22.063 34.6737 22.2003 34.5284C22.3376 34.3831 22.4411 34.2127 22.5042 34.028C22.5673 33.8432 22.5886 33.6482 22.5667 33.4554C24.0606 33.0583 25.4261 32.321 26.5409 31.3095C26.7088 31.423 26.9 31.5027 27.1025 31.5435C27.3049 31.5843 27.5143 31.5854 27.7172 31.5467C27.9201 31.508 28.1123 31.4303 28.2815 31.3185C28.4507 31.2068 28.5933 31.0634 28.7002 30.8975L29.8073 29.1029C29.9073 28.9331 29.9686 28.7458 29.9874 28.5527C30.0062 28.3597 29.9821 28.1651 29.9165 27.9812C29.8509 27.7973 29.7454 27.6281 29.6065 27.4843C29.4676 27.3405 29.2983 27.2251 29.1094 27.1455ZM27.4296 30.2399C27.1509 30.0513 26.8107 29.9594 26.4674 29.9799C26.1242 30.0005 25.7993 30.1322 25.5486 30.3525C24.603 31.2105 23.4449 31.8358 22.1778 32.1725C21.8464 32.2737 21.5609 32.4758 21.3667 32.7467C21.1726 33.0175 21.0811 33.3414 21.1068 33.6667L18.8633 33.6419C18.8991 33.3214 18.8143 32.9993 18.6235 32.7311C18.4327 32.4628 18.1479 32.2652 17.8181 32.1722C16.5513 31.8355 15.3934 31.2103 14.448 30.3525C14.1891 30.1345 13.8595 30.004 13.5119 29.9819C13.1644 29.9598 12.8189 30.0475 12.5309 30.2308L11.4321 28.4017C11.7468 28.2701 12.0027 28.04 12.1555 27.7509C12.3083 27.4618 12.3485 27.1319 12.2692 26.818C11.9477 25.6245 11.9477 24.3749 12.2692 23.1813C12.3417 22.8622 12.2977 22.5295 12.1443 22.2364C11.9909 21.9434 11.737 21.7069 11.4231 21.5648L12.5664 19.7597C12.8449 19.949 13.1853 20.0414 13.5288 20.0209C13.8724 20.0004 14.1975 19.8683 14.448 19.6475C15.3936 18.7895 16.5517 18.1642 17.8188 17.8275C18.1502 17.7264 18.4358 17.5242 18.63 17.2534C18.8241 16.9825 18.9156 16.6586 18.8897 16.3333L21.1333 16.3581C21.0975 16.6786 21.1824 17.0007 21.3731 17.2689C21.5639 17.5372 21.8487 17.7348 22.1785 17.8278C23.4453 18.1645 24.6032 18.7897 25.5486 19.6475C25.8074 19.8657 26.1371 19.9963 26.4847 20.0183C26.8323 20.0404 27.1778 19.9527 27.4657 19.7692L28.5646 21.5983C27.0188 22.2832 28.0789 23.8105 27.9689 25C27.9691 25.6132 27.888 26.2241 27.7274 26.8187C27.655 27.1378 27.6989 27.4705 27.8523 27.7636C28.0057 28.0566 28.2596 28.2931 28.5736 28.4352L27.4296 30.2399Z" fill="white" stroke="white" strokeWidth="0.3" />
    <path d="M15 24.9836C15 26.314 15.5268 27.59 16.4644 28.5307C17.4021 29.4715 18.6739 30 20 30C21.326 30 22.5978 29.4715 23.5355 28.5308C24.4732 27.59 25 26.3141 25 24.9837C24.7499 18.3397 15.2512 18.3379 15 24.9836ZM16.1921 24.9836C16.3711 19.927 23.63 19.9291 23.8079 24.9836C23.6299 30.0386 16.3709 30.0399 16.1921 24.9836Z" fill="white" stroke="white" strokeWidth="0.3" />
  </svg>
);

const SeeInsightsIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none">
    <g clipPath="url(#clip0_184_8721)">
      <path d="M30.2615 24.6231H25.6304C25.4232 24.6231 25.2245 24.5408 25.078 24.3943C24.9315 24.2478 24.8492 24.0491 24.8492 23.8419V8.08984C24.8492 7.88264 24.9315 7.68393 25.078 7.53742C25.2245 7.3909 25.4232 7.30859 25.6304 7.30859H30.2615C30.4687 7.30859 30.6674 7.3909 30.814 7.53742C30.9605 7.68393 31.0428 7.88264 31.0428 8.08984V23.8419C31.0428 24.0491 30.9605 24.2478 30.814 24.3943C30.6674 24.5408 30.4687 24.6231 30.2615 24.6231ZM26.4117 23.0606H29.4803V8.87109H26.4117V23.0606Z" fill="white" />
      <path d="M38.9612 24.6227H34.3301C34.1229 24.6227 33.9242 24.5403 33.7777 24.3938C33.6312 24.2473 33.5489 24.0486 33.5489 23.8414V3.55078C33.5489 3.34358 33.6312 3.14487 33.7777 2.99835C33.9242 2.85184 34.1229 2.76953 34.3301 2.76953H38.9612C39.1684 2.76953 39.3671 2.85184 39.5137 2.99835C39.6602 3.14487 39.7425 3.34358 39.7425 3.55078V23.8414C39.7425 24.0486 39.6602 24.2473 39.5137 24.3938C39.3671 24.5403 39.1684 24.6227 38.9612 24.6227ZM35.1114 23.0602H38.18V4.33203H35.1114V23.0602Z" fill="white" />
      <path d="M21.5625 24.6228H16.9308C16.7236 24.6228 16.5249 24.5405 16.3784 24.394C16.2318 24.2475 16.1495 24.0488 16.1495 23.8416V12.9609C16.1495 12.7537 16.2318 12.555 16.3784 12.4085C16.5249 12.262 16.7236 12.1797 16.9308 12.1797H21.5625C21.7697 12.1797 21.9684 12.262 22.1149 12.4085C22.2614 12.555 22.3438 12.7537 22.3438 12.9609V23.8416C22.3438 24.0488 22.2614 24.2475 22.1149 24.394C21.9684 24.5405 21.7697 24.6228 21.5625 24.6228ZM17.7127 23.0603H20.7813V13.7422H17.712L17.7127 23.0603Z" fill="white" />
      <path d="M12.8622 24.6226H8.23126C8.02406 24.6226 7.82535 24.5403 7.67884 24.3938C7.53232 24.2473 7.45001 24.0486 7.45001 23.8414V17.3076C7.45001 17.1004 7.53232 16.9017 7.67884 16.7552C7.82535 16.6087 8.02406 16.5264 8.23126 16.5264H12.8622C13.0694 16.5264 13.2681 16.6087 13.4146 16.7552C13.5611 16.9017 13.6434 17.1004 13.6434 17.3076V23.8414C13.6434 24.0486 13.5611 24.2473 13.4146 24.3938C13.2681 24.5403 13.0694 24.6226 12.8622 24.6226ZM9.01251 23.0601H12.0809V18.0889H9.01251V23.0601Z" fill="white" />
      <path d="M17.6347 35.2681C14.8112 35.2679 12.029 34.5897 9.52215 33.2906C7.01527 31.9915 4.85698 30.1094 3.22879 27.8027C1.60059 25.4959 0.550098 22.8319 0.165645 20.0347C-0.218808 17.2375 0.0740211 14.3889 1.01951 11.7284C1.96499 9.06791 3.53549 6.67334 5.59893 4.74608C7.66237 2.81881 10.1584 1.41519 12.8772 0.65325C15.5959 -0.108686 18.4579 -0.206659 21.2224 0.36757C23.9869 0.941799 26.573 2.17144 28.7635 3.95309C28.8441 4.0175 28.9112 4.09726 28.9608 4.18775C29.0105 4.27824 29.0417 4.37768 29.0527 4.4803C29.0637 4.58293 29.0542 4.68672 29.0249 4.78567C28.9955 4.88463 28.9469 4.97679 28.8817 5.05682C28.8165 5.13686 28.7361 5.20319 28.6452 5.25198C28.5542 5.30077 28.4545 5.33105 28.3518 5.34107C28.249 5.3511 28.1453 5.34067 28.0467 5.31039C27.948 5.28011 27.8563 5.23057 27.7769 5.16465C25.2172 3.08359 22.079 1.8407 18.7885 1.60474C15.498 1.36878 12.2146 2.15118 9.38413 3.84571C6.55365 5.54024 4.31324 8.06479 2.96708 11.0766C1.62093 14.0884 1.23427 17.4415 1.85959 20.6806C2.48492 23.9198 4.09193 26.888 6.46244 29.1823C8.83295 31.4765 11.8521 32.9857 15.1099 33.5049C18.3678 34.0241 21.7064 33.528 24.6727 32.0842C27.6389 30.6404 30.0889 28.3187 31.69 25.4343C31.7908 25.2533 31.9593 25.1196 32.1586 25.0628C32.3578 25.006 32.5715 25.0307 32.7526 25.1314C32.9337 25.2322 33.0673 25.4007 33.1241 25.6C33.1809 25.7993 33.1562 26.013 33.0555 26.194C31.5261 28.9428 29.2904 31.2333 26.5793 32.8285C23.8682 34.4238 20.7803 35.266 17.6347 35.2681Z" fill="white" />
      <path d="M23.5956 7.0088C23.4696 7.00885 23.3454 6.97823 23.2338 6.91958C21.505 6.01809 19.5841 5.5472 17.6344 5.54693C15.7809 5.54175 13.9516 5.9672 12.2906 6.78974C12.1986 6.83516 12.0986 6.86201 11.9962 6.86877C11.8939 6.87552 11.7912 6.86205 11.694 6.82911C11.5968 6.79618 11.5071 6.74442 11.4299 6.67681C11.3528 6.6092 11.2897 6.52705 11.2442 6.43505C11.1988 6.34305 11.172 6.24301 11.1652 6.14064C11.1585 6.03826 11.1719 5.93556 11.2049 5.83839C11.2378 5.74122 11.2896 5.65149 11.3572 5.57432C11.4248 5.49716 11.5069 5.43406 11.5989 5.38864C13.4748 4.45941 15.541 3.9787 17.6344 3.98443C19.8365 3.9849 22.006 4.51683 23.9586 5.53505C24.1135 5.61611 24.2367 5.74677 24.3086 5.90614C24.3804 6.06551 24.3967 6.24437 24.3549 6.41411C24.3131 6.58385 24.2156 6.73466 24.0779 6.84242C23.9403 6.95017 23.7705 7.00865 23.5956 7.00849V7.0088Z" fill="white" />
      <path d="M36.8178 40.0009C36.3997 40.002 35.9856 39.9202 35.5994 39.7601C35.2132 39.6001 34.8626 39.3651 34.5678 39.0687L27.1793 31.6801C27.0359 31.5329 26.9562 31.3352 26.9575 31.1297C26.9589 30.9243 27.0411 30.7276 27.1864 30.5823C27.3317 30.437 27.5284 30.3548 27.7339 30.3535C27.9394 30.3522 28.1371 30.4319 28.2842 30.5754L35.6728 37.964C35.9771 38.2649 36.3882 38.4331 36.8162 38.4318C37.2441 38.4306 37.6542 38.26 37.9568 37.9574C38.2594 37.6548 38.43 37.2447 38.4312 36.8167C38.4324 36.3888 38.2642 35.9777 37.9633 35.6734L30.575 28.2849C30.4327 28.1376 30.3539 27.9402 30.3557 27.7354C30.3575 27.5306 30.4396 27.3346 30.5845 27.1898C30.7293 27.0449 30.9253 26.9627 31.1301 26.961C31.335 26.9592 31.5323 27.0379 31.6797 27.1802L39.0679 34.5685C39.5129 35.0136 39.8159 35.5806 39.9386 36.1978C40.0614 36.8151 39.9984 37.4549 39.7576 38.0363C39.5167 38.6177 39.1089 39.1147 38.5857 39.4644C38.0624 39.8141 37.4471 40.0008 36.8178 40.0009Z" fill="white" />
    </g>
    <defs>
      <clipPath id="clip0_184_8721">
        <rect width="40" height="40" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

// Individual card component for better organization
const AnalyticsCard = ({
  icon,
  description,
  buttonLabel,
  gradientClass,
  shadowClass,
  onClick
}) => (
  <article className="flex w-[300px] p-3 flex-col items-start gap-2 rounded-lg border border-stroke-300 bg-white">
    <div className="rounded-lg bg-[rgba(2,87,221,0.05)] flex h-40 py-4 px-7 flex-col justify-center items-center gap-2.5 self-stretch">
      <div className={`rounded-2xl border-2 border-white/20 ${gradientClass} ${shadowClass} flex w-18 h-18 p-1 flex-col justify-center items-center gap-2 shrink-0`}>
        {icon}
      </div>
    </div>
    <div className="flex flex-col items-start justify-center gap-2 self-stretch">
      <p className="text-regular-12">{description}</p>
      <button
        className="flex h-7 py-[13px] px-[14px] justify-center items-center gap-1.5 self-stretch rounded-lg border border-stroke-300 bg-white shadow-light text-medium-14 text-center hover:bg-gray-50 transition-colors"
        onClick={onClick}
      >
        {buttonLabel}
      </button>
    </div>
  </article>
);

const StartWithAnalytics = () => {
  const handleUploadFile = () => {
    console.log('Upload file clicked');
    // Add your logic here
  };

  const handleGetInsights = () => {
    console.log('Get insights clicked');
    // Add your logic here
  };

  // Card data for better organization
  const cardData = [
    {
      id: 'upload',
      icon: <SuggestedItemIcon />,
      description: "Upload a file and manage access permissions",
      buttonLabel: "Try it out",
      gradientClass: "bg-[radial-gradient(358.2%_184.72%_at_50%_-10.42%,#55DAFF_0%,#0358DD_44.21%)]",
      shadowClass: "shadow-[rgba(3,88,221,0.20)_-3px_4px_8px_0px]",
      onClick: handleUploadFile
    },
    {
      id: 'insights',
      icon: <SeeInsightsIcon />,
      description: "Get page-by-page analytics sample",
      buttonLabel: "See Insights",
      gradientClass: "bg-[radial-gradient(328.58%_169.44%_at_50%_4.86%,#FB5_0%,#DD8603_53.92%)]",
      shadowClass: "shadow-[rgba(41,27,5,0.20)_-3px_4px_8px_0px] shadow-[rgba(3,88,221,0.20)_-3px_4px_8px_0px]",
      onClick: handleGetInsights
    }
  ];

  return (
    <section className="flex flex-col items-start gap-3 self-stretch">
      <header>
        <h2 className="text-medium-18">Starting with analytics</h2>
      </header>
      
      <div className="flex items-start gap-3">
        {cardData.map((card) => (
          <AnalyticsCard
            key={card.id}
            icon={card.icon}
            description={card.description}
            buttonLabel={card.buttonLabel}
            gradientClass={card.gradientClass}
            shadowClass={card.shadowClass}
            onClick={card.onClick}
          />
        ))}
      </div>
    </section>
  );
};

export default StartWithAnalytics;